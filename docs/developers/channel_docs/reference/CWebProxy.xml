<?xml version="1.0"?>

  <!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
   "http://www.oasis-open.org/docbook/xml/4.0/docbookx.dtd" >

  <!--
   Author:   Andrew Draskoy
   Filename: CWebProxy.xml
   Creation: Mon Jul 23 13:36:17 PDT 2001
   Revision: $Revision$ 
   Language: XML 1.0 (DocBook XML DTD v4.1.2)
   Purpose:  Documents the CWebProxy channel class for uPortal 2.x
   $Id$
   -->

<article status="draft" class="techreport">
  <articleinfo>
    <author>
      <firstname>Andrew</firstname>
      <surname>Draskoy</surname>
      <affiliation>
     <orgname>Memorial University of Newfoundland</orgname>
          <orgdiv>Computing and Communications</orgdiv>
      </affiliation>
    </author>
    <author>
      <firstname>Sarah</firstname>
      <surname>Arnott</surname>
      <affiliation>
     <orgname>Memorial University of Newfoundland</orgname>
          <orgdiv>Computing and Communications</orgdiv>
      </affiliation>
    </author>
    

     <date>September 21, 2000</date>

     <title>CWebProxy
     </title>

  <!--
     <revhistory>
        <revision>
           <revnumber>0.1</revnumber>
           <date>September 21, 2000</date>
           <revremark>Baselined</revremark>
        </revision>
     </revhistory>
   -->
  </articleinfo>

  <sect1>
    <title>Purpose</title>
    
    <para>CWebProxy allows incorporation of web-based services as channels.  It provides mechanisms
     for connecting to and rendering HTML and XML services.  Pages are refreshed when they change.
     For applications under http, GET and POST parameters are passed through the portal to the 
     application.  This allows communcation between the browser and the back-end application.  
     Cookies are are kept within CWebProxy, allowing dynamic http applications to maintain
     state.
    </para>

  </sect1>

  <sect1>
    <title>Summary</title>
    
    <para>The key mechanism is <emphasis>pass-through</emphasis>.  It is the means for
    <emphasis>passing</emphasis> request parameters <emphasis>through</emphasis> the portal
    to the application. There are currently four levels of pass-through supported:
    </para>
    
    <itemizedlist mark="bullet">
       <listitem>
          <para>Use <quote>application</quote> if you want references to the original <parameter class='command'>cw_xml</parameter>
           to stay in the channel, and other links to go outside the portal framework. 
          </para>
       </listitem>
       <listitem>
          <para>Use <quote>all</quote> if you want all links generated by the first URL to stay in the channel.
          </para>
       </listitem>
       <listitem>
          <para>Use <quote>marked</quote> if you want to indicate precisely which links should stay
          in channel, and which should replace the framework
          </para>
       </listitem>
       <listitem>
          <para>Use <quote>none</quote> if you're not interested in having any of the links stay in-channel. 
          </para>
       </listitem>       
    </itemizedlist>
    
    <para>Note that it is possible to change the pass-through type at any point, so if a link is
    followed that would best be served by another pass-though type, it is a trivial matter to 
    change it at that time.
    </para>
    
  </sect1>

  <sect1>
    <title>Static Data and Runtime Data</title>
    
    <para>With the exception of <parameter class='command'>cw_reset</parameter>, which is a runtime 
     parameter only, parameters are identical for both static and runtime data. The channel state 
     variables are initially set 
     acccording to static data, or defaults.  Runtime data modifies the equivalent channel state
     variables. All parameters are then passed through to the stylesheets based on the current
     state.  The parameters are:
    </para>
    
    <itemizedlist mark="bullet">
       <listitem>
          <para><parameter>cw_xml</parameter>: a URI representing the source XML or HTML document.
          </para>
       </listitem>
       <listitem>
          <para><parameter>cw_ssl</parameter>: a URI representing the corresponding .ssl (stylesheet list) file.
          </para>
       </listitem>       
       <listitem>
          <para><parameter>cw_xslTitle</parameter>: a title representing the stylesheet (optional). 
          If no title parameter is specified, a default stylesheet will be chosen according to the media.
          </para>
       </listitem>
       <listitem>
          <para><parameter>cw_xsl</parameter>:  a URI representing the stylesheet to use. If 
          <parameter>cw_xsl</parameter> is supplied, <parameter>cw_ssl</parameter> and 
          <parameter>cw_xslTitle</parameter> will be ignored.
          </para>
       </listitem>       
        <listitem>
          <para><parameter>cw_info</parameter>: a URI to be called for the <emphasis>info</emphasis>
           event.
          </para>
       </listitem> 
       <listitem>
          <para><parameter>cw_help</parameter>: a URI to be called for the <emphasis>help</emphasis>
           event.
          </para>
       </listitem>
       <listitem>
          <para><parameter>cw_edit</parameter>: a URI to be called for the <emphasis>edit</emphasis>
           event.
          </para>
       </listitem> 
       <listitem>
          <para><parameter>cw_tidy</parameter>: if set to <emphasis>on</emphasis>, filter the 
          source document through JTidy, converting HTML to XHTML.
          </para>
       </listitem>
       <listitem>
          <para><parameter>cw_passThrough</parameter>: indicates that runtime data is to be passed
           through. If <emphasis>passThrough</emphasis> is supplied, and not set to 
           <quote>none</quote>, additional runtime data parameters and values will be passed as
           request parameters to the <emphasis>cw_xml</emphasis>. 
           <parameter>cw_passThrough</parameter> values:
           
               <itemizedlist mark="opencircle">
                  <listitem>
                     <para><parameter>none</parameter>: (default).  Don't do anything.
                     </para>
                  </listitem>
                  <listitem>
                     <para><parameter>marked</parameter>: If runtime data includes 
                     <parameter>cw_inChannelLink</parameter>, pass through other runtime data as
	                 request parameters. Use in conjunction with a stylesheet that marks appropriate
		             links with <parameter>cw_inChannelLink</parameter> as a request parameter, and replaces the URI with
		             baseActionURL, possibly with <parameter>cw_xml</parameter> and maybe other 
		             parameters.
                     </para>
                  </listitem>
                  <listitem>
                     <para><parameter>all</parameter>: This parameter instructs the render routine to 
                     pass through all additional runtime data as http request parameters to xmlURI.
		             Intended to support XHTML dynamic pages.  With JTidy hooked in, can support HTML
		             as well.  Use in conjunction with a style sheet that re-routes all links through
		             the portal.
                     </para>
                  </listitem>
                  <listitem>
                     <para><parameter>application</parameter>: The same as <parameter>all</parameter>.
                      Use in conjunction with a style sheet that re-routes links for that application
		              through the portal.
                     </para>
                  </listitem>                  
               </itemizedlist>
          </para>     
       </listitem>          
       <listitem>
          <para><parameter>cw_reset</parameter> An instruction to reset internal variables.
                The value <emphasis>return</emphasis> resets <parameter>cw_xml</parameter>
                to its last value before changed by button events.  The
                value <parameter>reset</parameter> returns all variables to the static data
                values.  (reset not impl. yet.)  Runtime data parameter only.
          </para>
       </listitem>
                                                   
    </itemizedlist>

    <para>
    Note: parameter names have changed from the previous version of CWebProxy. <parameter>cw_xsl
    </parameter> and <parameter>cw_xslTitle</parameter> are there for compatibility with CGenericXSLT
     and might go away.
    </para>
    
    <sect2>
       <title>Portal Events</title>
       
       <para>CWebProxy supports the button events for <emphasis>help</emphasis>, <emphasis>about
       </emphasis>, and <emphasis>edit</emphasis>.  A channel instance can specify URIs for any 
       of these via static or runtime data.  A button event will then redirect the channel to the
       appropriate URI.  Note that separate stylesheets for button event URIs are not supported.
       The URI should return control to the original application via <parameter>cw_reset</parameter>
       <parameter class="option">=return</parameter>.

       </para>
    </sect2>
           
    <sect2>
       <title>Stylesheets</title>
       
       <para>These stylesheets are set up for typical dynamic applications.  You may need to make
        modifications to suit particular applications.
       </para>
       
       <sect3>
          <title>xhtml.xsl</title>
          <para>For use with XHTML or HTML applications.
          </para>
          
          <para>The base URI is determined from cw_xml, or from the href element of the 
          <sgmltag role="xml" class="emptytag">base</sgmltag> tag, if one exists in the document head.  Note that this is
          different from the baseActionURL, which is a URI referring to the channel via the portal.
          </para>
          
          <para><sgmltag role="xml" class="starttag">script</sgmltag> elements are copied from both
          <sgmltag role="xml" class="starttag">head</sgmltag> and <sgmltag role="xml" class="starttag">body</sgmltag>.
          </para>
          
          <para>Children of <sgmltag role="xml" class="starttag">body</sgmltag> are copied as is, save for the following special
           processing:

               <itemizedlist mark="bullet">
                  <listitem>
                     <para><sgmltag role="xml" class="starttag">form</sgmltag>  If the <emphasis>action</emphasis>
                     attribute is a relative URL, the absolute URL is found using the <parameter>cw_xml
                     </parameter> parameter.  Its value is then modified according to the value of 
                     <parameter>cw_passThrough</parameter>:
                     
                        <itemizedlist mark="opencircle">
                           <listitem>   
                              <para><parameter class="option">none</parameter> (default): href is as is unless it is a relative URL,
	                          in which case it is prepended with the base URI.
                              </para>
                           </listitem>
                           <listitem>   
                              <para><parameter class="option">marked</parameter>: if the href contains a query string parameter
	                          named <parameter class="option">cw_inChannelLink</parameter>, the href is replaced with baseActionURL concatenated with the original querystring.  The value of
	                          <parameter>cw_inChannelLink</parameter> is ignored.
                              </para>
                           </listitem>
                        </itemizedlist>
                     
                     </para>
                  </listitem>
                  <listitem>
                     <para><sgmltag role="xml" class="starttag">a</sgmltag> If the <emphasis>href</emphasis>
                     attribute is a relative URL, the absolute URL is found using the <parameter>cw_xml</parameter>
                     parameter.  Its value is then modified according to the value of <parameter>cw_passThrough</parameter>:
                     </para>
                  </listitem>
 
               </itemizedlist>
               
          </para>
                         
           
       </sect3>
       
    </sect2>
        
  </sect1>



</article>
