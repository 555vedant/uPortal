description = "Apereo uPortal $version"

/*======== Plugins ========*/
apply plugin: 'java'
apply plugin: 'com.gradle.build-scan'
apply plugin: 'com.moowork.node'
apply from: rootProject.file('gradle/tasks/clean.gradle')
apply from: rootProject.file('gradle/tasks/hsql.gradle')

/*======== Dependency Management ========**/
repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        mavenLocal()
    }
    dependencies {
        classpath 'com.gradle:build-scan-plugin:1.0'
        classpath 'com.moowork.gradle:gradle-node-plugin:0.13'
        classpath 'gradle.plugin.com.github.sherter.google-java-format:google-java-format-gradle-plugin:0.6'
    }
}

node {
    version = '8.0.0'
    download = true
}

/*======== Static Analysis ========*/
buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}

/*======== Child Projects ========*/
subprojects {

    /*======== Plugins ========*/
    apply plugin: 'com.github.sherter.google-java-format'
    apply plugin: 'eclipse'
    apply plugin: 'findbugs'
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'signing'

    /*======== Dependency Management ========**/
    repositories {
        mavenLocal()
        mavenCentral()
    }

    configurations {
        // Banned dependencies
        all*.exclude group: 'commons-logging', module: 'commons-logging'
        all*.exclude group: 'commons-logging', module: 'commons-logging-api'
        all*.exclude group: 'log4j', module: 'log4j'
    }

    dependencies {
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.easymock:easymock:${easymockVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestVersion}"
        testCompile "org.mockito:mockito-core:${mockitoVersion}"
        testCompile "org.springframework:spring-test:${springVersion}"
        testCompile "xmlunit:xmlunit:${xmlunitVersion}"
    }

    /* Release Management
     *
     * Based on Sonatype's guide for publishing w/ Gradle:  http://central.sonatype.org/pages/gradle.html
     */
    signing {
        required { gradle.taskGraph.hasTask('uploadArchives') }
        sign configurations.archives
    }
    tasks.withType(Javadoc) {
        // FIXME: Fix errors rather than supressing them
        failOnError = false
    }
    tasks.withType(Jar) {
        from(project.projectDir) {
            include "${rootDir}/LICENSE"
            into 'META-INF'
        }
    }
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier 'sources'
        from sourceSets.main.allSource
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    artifacts {
        archives javadocJar, sourcesJar
    }
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'uPortal'
                    packaging 'jar'
                    // optionally artifactId can be defined here
                    description 'Enterprise open source portal built by and for the higher education community.'
                    url 'https://github.com/Jasig/uPortal'

                    scm {
                        connection 'scm:git@github.com:Jasig/uPortal.git'
                        url 'https://github.com/Jasig/uPortal'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            organization 'uPortal Developers'
                            organizationUrl 'https://github.com/Jasig/uPortal/graphs/contributors'
                        }
                    }
                }
            }
        }
    }

    /*======== Static Analysis ========*/
    findbugs {
        toolVersion = '3.0.1'
        ignoreFailures = true
    }
    googleJavaFormat {
        toolVersion '1.3'
        options style: 'AOSP'
    }
}
