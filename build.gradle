description = "Apereo uPortal $version"

/*======== Plugins ========*/
apply plugin: 'java'
apply plugin: 'com.gradle.build-scan'
apply plugin: 'com.moowork.node'
apply from: rootProject.file('gradle/tasks/clean.gradle')
apply from: rootProject.file('gradle/tasks/hsql.gradle')

/*======== Dependency Management ========**/
repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        mavenLocal()
    }
    dependencies {
        classpath 'com.gradle:build-scan-plugin:1.0'
        classpath 'com.moowork.gradle:gradle-node-plugin:0.13'
        classpath 'gradle.plugin.com.github.sherter.google-java-format:google-java-format-gradle-plugin:0.6'
    }
}

node {
    version = '8.0.0'
    download = true
}

/*======== Static Analysis ========*/
buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}

/*======== Child Projects ========*/
subprojects {
    /*======== Plugins ========*/
    apply plugin: 'com.github.sherter.google-java-format'
    apply plugin: 'eclipse'
    apply plugin: 'findbugs'
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'maven'
    apply plugin: 'signing'

    /*======== Dependency Management ========**/
    repositories {
        mavenLocal()
        mavenCentral()
    }

    configurations {
        // Banned dependencies
        all*.exclude group: 'commons-logging', module: 'commons-logging'
        all*.exclude group: 'commons-logging', module: 'commons-logging-api'
        all*.exclude group: 'log4j', module: 'log4j'
    }

    dependencies {
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.easymock:easymock:${easymockVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestVersion}"
        testCompile "org.mockito:mockito-core:${mockitoVersion}"
        testCompile "org.springframework:spring-test:${springVersion}"
        testCompile "xmlunit:xmlunit:${xmlunitVersion}"
    }

    /*======== Release Management ========*/
    signing {
        required { gradle.taskGraph.hasTask('publish') }
        sign configurations.archives
    }

    ext {
        sonatypeUser = project.hasProperty('sonatypeUser') ? project.getProperty('sonatypeUser') : ''
        sonatypePassword = project.hasProperty('sonatypePassword') ? project.getProperty('sonatypePassword') : ''
    }

    tasks.withType(Javadoc) {
        // FIXME: Fix errors rather than supressing them
        failOnError = false
    }

    tasks.withType(Jar) {
        from(project.projectDir) {
            include "${rootDir}/LICENSE"
            into 'META-INF'
        }
    }

    task sourceJar(type: Jar, dependsOn: classes) {
        classifier 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java

                artifact sourceJar
                artifact javadocJar

                pom.withXml {
                    asNode().with {
                        appendNode('description', 'Enterprise open source portal built by and for the higher education community.')
                        appendNode('url', 'https://www.apereo.org/projects/uportal')
                        appendNode('scm').with {
                            appendNode('url', 'https://github.com/Jasig/uPortal')
                            appendNode('connection', 'scm:git@github.com:Jasig/uPortal.git')
                        }
                        appendNode('issueManagement').with {
                            appendNode('url', 'https://issues.jasig.org/browse/UP/')
                            appendNode('system', 'JIRA')
                        }
                        appendNode('licenses').with {
                            appendNode('license').with {
                                appendNode('name', 'The Apache Software License, Version 2.0')
                                appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                            }
                        }
                        appendNode('organization').with {
                            appendNode('name', 'Apereo')
                            appendNode('url', 'https://www.apereo.org/')
                        }
                        appendNode('developers').with {
                            appendNode('developer').with {
                                appendNode('organization', 'uPortal Developers')
                                appendNode('organizationUrl', 'https://github.com/Jasig/uPortal/graphs/contributors')
                            }
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                // Sonatype staging repo for releases
                url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                credentials {
                    username sonatypeUser
                    password sonatypePassword
                }
            }
        }
    }

    /*======== Static Analysis ========*/
    findbugs {
        toolVersion = '3.0.1'
        ignoreFailures = true
    }

    googleJavaFormat {
        toolVersion '1.3'
        options style: 'AOSP'
    }
}
