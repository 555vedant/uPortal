description = "Apereo uPortal $version"

// Build Scans provide detailed information about many aspects of your
// build right in your browser.  (https://scans.gradle.com/plugin)
apply plugin: 'com.gradle.build-scan'
apply plugin: 'java'

// Adds support for Node.js scripts
apply plugin: 'com.moowork.node'

def props = new Properties()
file("build.properties").withInputStream { props.load(it) }

task copySampleProperties(type: Copy) {
 printf "Configuring copying the build.properties.sample into build.properties"
 from '.'
    into '.'
    include 'build.properties.sample'
    rename { String fileName ->
    fileName.replace("build.properties.sample", "build.properties")
  }
}

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.gradle:build-scan-plugin:1.0'
        classpath 'com.moowork.gradle:gradle-node-plugin:0.13'
        classpath 'gradle.plugin.com.github.sherter.google-java-format:google-java-format-gradle-plugin:0.6'
    }
}

node {
    // Version of node to use.
    version = '6.9.1'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
}

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}

	 task cleanShared(type:Delete) {
		description 'Removes ALL shared libraries from the servlet container.'
		def serverbase = props.getProperty("server.home")
		def libs =  "${serverbase}/shared/lib"
		printf "Configured shared libraries from servlet container at location:  ${libs}"
		FileTree tree = fileTree(dir: libs)
		delete fileTree(dir:libs , include: '*')
	}

	 task cleanTomcat(type:Delete) {
		description 'Removes the deployed uPortal from the servlet container.'
		def serverbase = props.getProperty("server.home")
		def uPortalDeployDir = "${serverbase}/webapps/uPortal"
		printf "Configured deployed uPortal from servlet container at location:  ${uPortalDeployDir}"
		FileTree tree = fileTree(dir: uPortalDeployDir)
		delete uPortalDeployDir
	}

subprojects {
    apply plugin: 'findbugs'
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'com.github.sherter.google-java-format'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    findbugs {
        toolVersion = '3.0.1'
        ignoreFailures = true
    }

    googleJavaFormat {
        toolVersion '1.3'
        options style: 'AOSP'
    }

    configurations {
        /*
         * Defines a 'provided' scope similar to the one in Maven.  Dependencies
         * defined using provided will not become transitive dependencies.
         */
        provided

        /*
         * Makes provided dependencies available on the compile classpath in a way
         * that works both from the command line and in Buildship.
         */
        compile.extendsFrom provided
    }
    
}