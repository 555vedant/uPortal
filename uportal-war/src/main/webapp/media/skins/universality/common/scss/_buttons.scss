// Button styles.
// Gives links and form buttons a consistent button look across the portal.
// Pass in the desired type of button based on the context.

// Use variables to store selectors.
$btn-up-selector		: ".button, button, input[type='submit'], input[type='button']";
$btn-hover-selector		: ".button:hover, .button:focus, a.button:hover, a.button:focus, button:hover, button:focus, input[type='submit']:hover, input[type='submit']:focus, input[type='button']:hover, input[type='button']:focus";
$btn-down-selector		: ".button:active, button:active, input[type='submit']:active, input[type='button']:active";
$btn-active-selector	: ".button.active, button.active, input[type='submit'].active, input[type='button'].active";
$btn-disabled-selector	: ".button[disabled='disabled'], button[disabled='disabled'], input[disabled='disabled'], input[disabled='disabled']:hover, input[disabled='disabled']:focus ";

// Mixin for repeated button style elements.
// Text-shadow is either "light" or "dark"; light is below the text and white, dark is above the text and black.
@mixin button-style($borderColor, $backgroundColor, $textColor, $textShadow, $gradientColor1, $gradientColor2) {
	border-color	: $borderColor;
	background		: $backgroundColor;
	color			: $textColor;
	@include text-shadow($textShadow);
	@include gradient($gradientColor1, $gradientColor2);
}

// Specific styling for button Active (global "on") state.
@mixin button-active() {
	@include button-style($c1darker, $c1, $white, dark, $c1, $c1darker);
}

/* Apply baseline button styling once to every kind of button. */
.up {
	#{$btn-up-selector} {
		display			: inline;
		margin			: 0;
		padding			: 0.3em 15px 0.4em 15px;
		border-width	: 1px;
		border-style	: solid;
		font-family		: "lucida grande",tahoma,verdana,arial,sans-serif;
		font-weight		: bold;
		font-size		: 12px;
		text-align		: center;
		text-decoration	: none;
		text-transform	: capitalize;
		cursor			: pointer;
		@include rounded(0.6em);
		@include box-shadow(0,1px,3px,rgba(0,0,0,.5));
	}
	
	a.button {
		display:block;
	}
	
	#{$btn-disabled-selector} {
		background		: $graylighter !important;
		border-color	: $gray !important;
		color			: $gray !important;
		text-shadow		: none !important;
		cursor			: default !important;
	}
	#{$btn-active-selector} {
		@include button-active();
	}
}

// Specific styling for button Up state. Styling is contextual, by the type passed in.
@mixin button-up($type) {
	
	@if $type == dark {
		@include button-style($c3darker, $c3, $white, dark, $c3, $c3darker);
	} @else if $type == light {
		@include button-style($graylight, $graylightest, $graydarkest, light, $white, $graylightest);
	} @else if $type == login {
		@include button-style($c4dark, $c4, $white, dark, $c4light, $c4dark);
	} @else if $type == utility {
		@include button-style($c3dark, $c3, $white, dark, $c3light, $c3dark);
	}  @else if $type == search {
		@include button-style($c1darker, $c1, $white, dark, $c1, $c1darker);
	} @else {
		@include button-style($c1darker, $c1, $white, dark, $c1, $c1darker);
	}
}

// Specific styling for button Hover state. Styling is contextual, by the type passed in.
@mixin button-hover($type) {
	
	@if $type == dark {
		@include button-style($c3darker, $c3light, $white, dark, $c3light, $c3dark);
	} @else if $type == light {
		@include button-style($graydark, $gray, $graydarkest, light, $graylightest, $graylighter);
	} @else if $type == login {
		@include button-style($c4dark, $c4light, $white, dark, $c4lighter, $c4dark);
	} @else if $type == utility {
		@include button-style($c3dark, $c3light, $white, dark, $c3lighter, $c3dark);
	}  @else if $type == search {
		@include button-style($c4darker, $c4light, $white, dark, $c4lighter, $c4dark);
	} @else {
		@include button-style($c1darker, $c1light, $white, dark, $c1lighter, $c1darker);
	}
}

// Specific styling for button Down state. Styling is contextual, by the type passed in.
@mixin button-down($type) {
	
	@if $type == dark {
		@include button-style($c3darker, $c3dark, $white, dark, $c3dark, $c3light);
	} @else if $type == light {
		@include button-style($graydark, $graydark, $graydarkest, light, $graylighter, $white);
	} @else if $type == login {
		@include button-style($c4darker, $c4dark, $white, dark, $c4dark, $c4light);
	} @else if $type == utility {
		@include button-style($c3darker, $c3dark, $white, dark, $c3dark, $c3light);
	}  @else if $type == search {
		@include button-style($c4darker, $c4dark, $white, dark, $c4dark, $c4light);
	} @else {
		@include button-style($c1darker, $c1dark, $white, dark, $c1darker, $c1);
	}
}

// Button mixin. Calls in the Up, Hover, and Down states.
// Passes the context type to those mixins.
// If no type is specified, default will be used, which will take the @else styles.
@mixin button($type: default) {
	#{$btn-up-selector} {
		@include button-up($type);
	}
	#{$btn-hover-selector} {
		@include button-hover($type);
	}
	#{$btn-down-selector} {
		@include button-down($type);
	}
}