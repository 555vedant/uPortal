<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<with-attribute key="PORTAL_CONTEXT" value="${groovy(org.jasig.portal.spring.PortalApplicationContextLocator.getApplicationContext())}">
    <properties location="constants.properties">
        <with>
            <attribute key="exportTasks">${groovy(PORTAL_CONTEXT.getBean('exportTasks'))}</attribute>
            <attribute key="entityType">${groovy(WebAttributes.REQUEST.getParameter('entityType'))}</attribute>
            <attribute key="sysid">${groovy(WebAttributes.REQUEST.getParameter('sysid'))}</attribute>
            <attribute key="SqlAttributes.DATA_SOURCE">${groovy(PORTAL_CONTEXT.getBean('PortalDb'))}</attribute>
            <attribute key="SqlAttributes.TRANSACTION_MANAGER">${groovy(PORTAL_CONTEXT.getBean('transactionManager'))}</attribute>
            <subtasks>
                <groovy>
                    <script>
                        WebAttributes.RESPONSE.setRenderParameter('operation', 'export');
                        WebAttributes.RESPONSE.setRenderParameter('result', 'SUCCESS');
                        WebAttributes.RESPONSE.setRenderParameter('downloadUrl', WebAttributes.REQUEST.getContextPath() + '/' + 'ImportExportServlet/export');
                    </script>
                </groovy>
                <choose>

                    <!-- layout -->
                    <when test="${jexl(entityType.equalsIgnoreCase('layout'))}">
                        <with-attribute key="USER_NAME" value="${sysid}">
		                    <groovy>
		                        <script>
		                            import org.danann.cernunnos.Attributes;
		                            import org.danann.cernunnos.ReturnValueImpl;
		                            import org.danann.cernunnos.runtime.RuntimeRequestResponse;
		                            
		                            ReturnValueImpl rslt = new ReturnValueImpl();
		                            RuntimeRequestResponse tr = new RuntimeRequestResponse();
		                            tr.setAttribute(Attributes.RETURN_VALUE, rslt);
		                            tr.setAttribute('USER_NAME', USER_NAME);
		                            
		                            exportTasks.get('layout').perform(tr, new RuntimeRequestResponse());
		                            def exportedLayoutDoc = rslt.getValue();
		                            ScriptAttributes.RESPONSE.setAttribute('Attributes.NODE', exportedLayoutDoc);
		                        </script>
		                        <subtasks>
		                            <crn location="setDownloadDocument.crn"/>
		                        </subtasks>
		                    </groovy>
                            <groovy>
                                <script>
                                    WebAttributes.REQUEST.getPortletSession(true).setAttribute(FILENAME_ATTRIBUTE, USER_NAME + '.layout', javax.portlet.PortletSession.APPLICATION_SCOPE);
                                </script>
                            </groovy>
                        </with-attribute>
                    </when>

                    <!-- profile -->
                    <when test="${jexl(entityType.equalsIgnoreCase('profile'))}">
                        <with-attribute key="USER_NAME" value="${sysid}">
                            <groovy>
                                <script>
                                    import org.danann.cernunnos.Attributes;
                                    import org.danann.cernunnos.ReturnValueImpl;
                                    import org.danann.cernunnos.runtime.RuntimeRequestResponse;
                                    
                                    ReturnValueImpl rslt = new ReturnValueImpl();
                                    RuntimeRequestResponse tr = new RuntimeRequestResponse();
                                    tr.setAttribute(Attributes.RETURN_VALUE, rslt);
                                    tr.setAttribute('USER_NAME', USER_NAME);
                                    
                                    exportTasks.get('profile').perform(tr, new RuntimeRequestResponse());
                                    def exportedProfileDoc = rslt.getValue();
                                    ScriptAttributes.RESPONSE.setAttribute('Attributes.NODE', exportedProfileDoc);
                                </script>
                                <subtasks>
                                    <crn location="setDownloadDocument.crn"/>
                                </subtasks>
                            </groovy>
                            <groovy>
                                <script>
                                    WebAttributes.REQUEST.getPortletSession(true).setAttribute(FILENAME_ATTRIBUTE, USER_NAME + '.profile', javax.portlet.PortletSession.APPLICATION_SCOPE);
                                </script>
                            </groovy>
                        </with-attribute>
                    </when>

                    <!-- channel -->
                    <when test="${jexl(entityType.equalsIgnoreCase('channel'))}">
                        <with-attribute key="FNAME" value="${sysid}">
                            <with-attribute key="Attributes.NODE" value="${crn(${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/export-channel.crn').toExternalForm())})}">
                                <crn location="setDownloadDocument.crn"/>
                                <groovy>
                                    <script>
                                        WebAttributes.REQUEST.getPortletSession(true).setAttribute(FILENAME_ATTRIBUTE, FNAME.replaceAll('[^a-zA-Z0-9]', '_') + '.channel', javax.portlet.PortletSession.APPLICATION_SCOPE);
                                    </script>
                                </groovy>
                            </with-attribute>
                        </with-attribute>
                    </when>

                    <!-- channel-type -->
                    <when test="${jexl(entityType.equalsIgnoreCase('channel-type'))}">
                        <with-attribute key="NAME" value="${sysid}">
                            <with-attribute key="Attributes.NODE" value="${crn(${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/export-channel-type.crn').toExternalForm())})}">
                                <crn location="setDownloadDocument.crn"/>
                                <groovy>
                                    <script>
                                        WebAttributes.REQUEST.getPortletSession(true).setAttribute(FILENAME_ATTRIBUTE, NAME.replaceAll('[^a-zA-Z0-9]', '_') + '.channel-type', javax.portlet.PortletSession.APPLICATION_SCOPE);
                                    </script>
                                </groovy>
                            </with-attribute>
                        </with-attribute>
                    </when>

                    <!-- group -->
                    <when test="${jexl(entityType.equalsIgnoreCase('group'))}">
                        <with-attribute key="GROUP_NAME" value="${sysid}">
                            <with-attribute key="Attributes.NODE" value="${crn(${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/export-group.crn').toExternalForm())})}">
                                <crn location="setDownloadDocument.crn"/>
                                <groovy>
                                    <script>
                                        WebAttributes.REQUEST.getPortletSession(true).setAttribute(FILENAME_ATTRIBUTE, GROUP_NAME.replaceAll('[^a-zA-Z0-9]', '_') + '.group', javax.portlet.PortletSession.APPLICATION_SCOPE);
                                    </script>
                                </groovy>
                            </with-attribute>
                        </with-attribute>
                    </when>

                    <!-- user -->
                    <when test="${jexl(entityType.equalsIgnoreCase('user'))}">
                        <with-attribute key="USER_NAME" value="${sysid}">
                            <with-attribute key="Attributes.NODE" value="${crn(${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/export-user.crn').toExternalForm())})}">
                                <crn location="setDownloadDocument.crn"/>
                                <groovy>
                                    <script>
                                        WebAttributes.REQUEST.getPortletSession(true).setAttribute(FILENAME_ATTRIBUTE, USER_NAME + '.user', javax.portlet.PortletSession.APPLICATION_SCOPE);
                                    </script>
                                </groovy>
                            </with-attribute>
                        </with-attribute>
                    </when>

                    <!-- theme -->
                    <when test="${jexl(entityType.equalsIgnoreCase('theme'))}">
                        <with-attribute key="NAME" value="${sysid}">
                            <with-attribute key="Attributes.NODE" value="${crn(${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/export-theme.crn').toExternalForm())})}">
                                <crn location="setDownloadDocument.crn"/>
                                <groovy>
                                    <script>
                                        WebAttributes.REQUEST.getPortletSession(true).setAttribute(FILENAME_ATTRIBUTE, NAME.replaceAll('[^a-zA-Z0-9]', '_') + '.theme', javax.portlet.PortletSession.APPLICATION_SCOPE);
                                    </script>
                                </groovy>
                            </with-attribute>
                        </with-attribute>
                    </when>

                    <!-- structure -->
                    <when test="${jexl(entityType.equalsIgnoreCase('structure'))}">
                        <with-attribute key="NAME" value="${sysid}">
                            <with-attribute key="Attributes.NODE" value="${crn(${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/export-structure.crn').toExternalForm())})}">
                                <crn location="setDownloadDocument.crn"/>
                                <groovy>
                                    <script>
                                        WebAttributes.REQUEST.getPortletSession(true).setAttribute(FILENAME_ATTRIBUTE, NAME.replaceAll('[^a-zA-Z0-9]', '_') + '.structure', javax.portlet.PortletSession.APPLICATION_SCOPE);
                                    </script>
                                </groovy>
                            </with-attribute>
                        </with-attribute>
                    </when>

                    <!-- entity-type -->
                    <when test="${jexl(entityType.equalsIgnoreCase('entity-type'))}">
                        <with-attribute key="NAME" value="${sysid}">
                            <with-attribute key="Attributes.NODE" value="${crn(${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/export-entity-type.crn').toExternalForm())})}">
                                <crn location="setDownloadDocument.crn"/>
                                <groovy>
                                    <script>
                                        WebAttributes.REQUEST.getPortletSession(true).setAttribute(FILENAME_ATTRIBUTE, NAME.replaceAll('[^a-zA-Z0-9]', '_') + '.entity-type', javax.portlet.PortletSession.APPLICATION_SCOPE);
                                    </script>
                                </groovy>
                            </with-attribute>
                        </with-attribute>
                    </when>

                </choose>
            </subtasks>
        </with>
    </properties>
</with-attribute>
