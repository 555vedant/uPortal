<!--

    Copyright (c) 2000-2009, Jasig, Inc.
    See license distributed with this file and available online at
    https://www.ja-sig.org/svn/jasig-parent/tags/rel-10/license-header.txt

-->
<!--
 | NOTICE:  This file represents a contractual API that is leveraged by more 
 | than one caller.  Please do not refactor this file in a way that changes 
 | the number or nature of arguments expected.
 |
 | These are:
 |   - ${Attributes.NODE}=XML Element that defines the entity to import
 |
 +-->
<with>
    <attribute key="USER_NAME">${valueOf(@username)}</attribute>
    <attribute key="USER_ID">${sql(SELECT user_id FROM up_user WHERE user_name = '${valueOf(@username)}')}</attribute>
    <attribute key="STRUCTURE_STYLESHEET_NAME">${valueOf(structure/@name)}</attribute>
    <attribute key="THEME_STYLESHEET_NAME">${valueOf(theme/@name)}</attribute>
    <subtasks>
        <with>
            <attribute key="STRUCTURE_STYLESHEET_ID">${crn(lookup-ss_struct_id.crn)}</attribute>
            <attribute key="THEME_STYLESHEET_ID">${crn(lookup-ss_theme_id.crn)}</attribute>
            <subtasks>
                <sql-transaction>
        
                            <!-- 
                             | Perform an 'upsert' operation on the PROFILE_NAME column
                             +-->
                            <sql-upsert>
                                <update-statement>
                                    UPDATE up_user_profile 
                                    SET description = ?, structure_ss_id = ?, theme_ss_id = ?
                                    WHERE user_id = ? AND profile_fname = ?
                                </update-statement>
                                <insert-statement>
                                    INSERT INTO up_user_profile(user_id, profile_id, profile_fname, profile_name, description, layout_id, structure_ss_id, theme_ss_id) 
                                    VALUES(?, ?, ?, ?, ?, ?, ?, ?)
                                </insert-statement>
                                <update-parameter value="${valueOf(description)}"/>
                                <update-parameter value="${groovy(STRUCTURE_STYLESHEET_ID.intValue())}"/>
                                <update-parameter value="${groovy(THEME_STYLESHEET_ID.intValue())}"/>
                                <update-parameter value="${USER_ID}"/>
                                <update-parameter value="${valueOf(fname)}"/>
                                <insert-parameter value="${USER_ID}"/>
								<insert-parameter value="${org.jasig.portal.io.SequenceGeneratorPhrase(UP_SS_THEME)}"/>
                                <insert-parameter value="${valueOf(fname)}"/>
                                <insert-parameter value="${valueOf(name)}"/>
                                <insert-parameter value="${valueOf(description)}"/>
                                <insert-parameter value="${groovy(1.intValue())}"/>
                                <insert-parameter value="${groovy(STRUCTURE_STYLESHEET_ID.intValue())}"/>
                                <insert-parameter value="${groovy(THEME_STYLESHEET_ID.intValue())}"/>
                            </sql-upsert>
        
                    <sql-query>
                        <sql>
                            SELECT profile_id 
                            FROM up_user_profile 
                            WHERE profile_fname = ?
                        </sql>
                        <parameter value="${valueOf(fname)}" />
                        <subtasks>
                            <!-- User (Profile) Parameters:  structure... -->
                            <node-iterator xpath="structure/parameter">
                                <sql-upsert>
                                    <update-statement>
                                        UPDATE up_ss_user_parm 
                                        SET param_val = ? 
                                        WHERE user_id = ? AND profile_id = ? AND ss_id = ? AND ss_type = 1 AND param_name = ?
                                    </update-statement>
                                    <insert-statement>
                                        INSERT INTO up_ss_user_parm(param_val, user_id, profile_id, ss_id, ss_type, param_name) 
                                        values(?, ?, ?, ?, 1, ?)
                                    </insert-statement>
                                    <parameter value="${valueOf(value)}"/>
                                    <parameter value="${USER_ID}"/>
                                    <parameter value="${PROFILE_ID}"/>
                                    <parameter value="${groovy(STRUCTURE_STYLESHEET_ID.intValue())}"/>
                                    <parameter value="${valueOf(name)}"/>
                                </sql-upsert>
                            </node-iterator>
        
                            <!-- User (Profile) Parameters:  theme... -->
                            <node-iterator xpath="theme/parameter">
                                <sql-upsert>
                                    <update-statement>
                                        UPDATE up_ss_user_parm 
                                        SET param_val = ? 
                                        WHERE user_id = ? AND profile_id = ? AND ss_id = ? AND ss_type = 2 AND param_name = ?
                                    </update-statement>
                                    <insert-statement>
                                        INSERT INTO up_ss_user_parm(param_val, user_id, profile_id, ss_id, ss_type, param_name) 
                                        values(?, ?, ?, ?, 2, ?)
                                    </insert-statement>
                                    <parameter value="${valueOf(value)}"/>
                                    <parameter value="${USER_ID}"/>
                                    <parameter value="${PROFILE_ID}"/>
                                    <parameter value="${groovy(THEME_STYLESHEET_ID.intValue())}"/>
                                    <parameter value="${valueOf(name)}"/>
                                </sql-upsert>
                            </node-iterator>
                            
                        </subtasks>
                    </sql-query>
        
                        <!-- </with-attribute>
                    </with-attribute> -->
        		</sql-transaction>
            </subtasks>
        </with>
    </subtasks>
</with>
 