<!--

    Copyright (c) 2000-2009, Jasig, Inc.
    See license distributed with this file and available online at
    https://www.ja-sig.org/svn/jasig-parent/tags/rel-10/license-header.txt

-->
<!--
 | NOTICE:  This file represents a contractual API that is leveraged by more 
 | than one caller.  Please do not refactor this file in a way that changes 
 | the number or nature of arguments expected.
 |
 | These are:
 |   - ${Attributes.NODE}=XML Element that defines the entity to import
 |   - ${PORTAL_CONTEXT}=uPortal's Spring ApplicationContext
 |   - ${SqlAttributes.DATA_SOURCE}=the DataSource for the PortalDb
 |   - ${SqlAttributes.TRANSACTION_MANAGER}=PlatformTransactionManager in use
 |   - Settings defined in classpath://properties/db/entities/import.properties
 |
 +-->
<with>
    <attribute key="fragmentDefinitionDao">${groovy(PORTAL_CONTEXT.getBean('fragmentDefinitionDao'))}</attribute>
    <attribute key="fragmentName">${valueOf(dlm:fragment/@name)}</attribute>    
    <subtasks>    
        <groovy>
            <script>
                import org.dom4j.DocumentHelper;
                import org.dom4j.io.DOMWriter;
                import org.jasig.portal.layout.dlm.FragmentDefinition;
                
                // Convert dom4j document to w3c document
                org.dom4j.Document doc1 = DocumentHelper.createDocument();
                doc1.setRootElement(Attributes.NODE.selectSingleNode('dlm:fragment').detach());
                
                DOMWriter writer = new DOMWriter();
                org.w3c.dom.Document doc2 = writer.write(doc1);
                                
                FragmentDefinition fd = fragmentDefinitionDao.getFragmentDefinition(fragmentName);
                if (fd == null) {
                    fd = new FragmentDefinition(); 
                }
                
                fd.loadFromEelement(doc2.getDocumentElement());
                fragmentDefinitionDao.updateFragmentDefinition(fd);
            </script>
        </groovy>
    </subtasks>
</with>
