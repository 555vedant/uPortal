<?xml version="1.0"?>
<!-- $Revision$ -->

<tables>
  <table>
    <name>UP_USER</name>
    <desc>Entries that uniquely identify a portal session for a particular user</desc>
    <columns>
      <column> <name>USER_ID</name>          <type>INTEGER</type>
      <desc>Internal sequence id of a user's portal information - unique user identifier - primary key</desc>
      <key>PK</key>
      </column>
      <column> <name>USER_NAME</name>        <type>VARCHAR</type>   <param>35</param> 
      <desc>Authentication prinicipal - Foreign key to up_person_dir</desc>
      </column>
      <column> <name>USER_DFLT_USR_ID</name> <type>INTEGER</type>
      <desc>use the information from this user id as a default, that is a backup to revert to if user makes mistakes changing content or profile, and the initial layout for a user.</desc>
      </column>
      <column> <name>USER_DFLT_LAY_ID</name> <type>INTEGER</type>
      <desc>Portal uses the layout from this layout ID to revert back to, and the initial layout for a user.</desc>
      </column>
      <column> <name>CURR_LAY_ID</name>      <type>INTEGER</type>
      <desc>Portal uses this layout ID to display this user's content - maps to layout_id in up_layout_struct</desc>
      </column>
      <column> <name>NEXT_STRUCT_ID</name> <type>INTEGER</type>
      <desc>NEXT_STRUCT_ID used by the user in layout - found in up_layout_struct based on user. Each user has a seperate, unique, sequence of struct_ids</desc>
      </column>
      <column> <name>LST_CHAN_UPDT_DT</name> <type>TIMESTAMP</type>
      <desc>Date time of last time channels were updated - It is set when a user adds a channel to his or her layout. The channel manager will be able to (not yet) present a list of channels added since the last time
the user checked.</desc>
      </column>
    </columns>
  </table>

  <table>
    <name>UP_USER_PARAM</name>
    <desc>Not used</desc>
    <columns>
      <column> <name>USER_ID</name>          <type>INTEGER</type>
      </column>
      <column> <name>USER_PARAM_NAME</name>  <type>VARCHAR</type> <param>35</param>
      </column>
      <column> <name>USER_PARAM_VALUE</name> <type>VARCHAR</type> <param>255</param>
      </column>
    </columns>
    <not-null>USER_ID</not-null>
  </table>

  <table>
    <name>UP_PERSON_DIR</name>
    <desc>Directory information for a given person, including the MD5 password. Emulates a simple external authentication service, like LDAP.</desc>
    <columns>
      <column> <name>USER_NAME</name>       <type>VARCHAR</type>   <param>35</param>
      <desc>Authentication prinicipal - Primary key and foreign key foreign key to external authentication system (which is what up_person_dir emulates)</desc>
      <key>PK</key>
      </column>
      <column> <name>ENCRPTD_PSWD</name>    <type>VARCHAR</type>   <param>64</param>
      <desc>MD5 authentication credential - or user's password</desc>
      </column>
      <column> <name>LST_PSWD_CGH_DT</name> <type>TIMESTAMP</type>
      <desc>Date of last password change</desc>
      </column>
      <column> <name>FIRST_NAME</name>	    <type>VARCHAR</type>   <param>15</param>
      <desc>Person's first name</desc>
      </column>
      <column> <name>LAST_NAME</name>       <type>VARCHAR</type>   <param>15</param>
      <desc>Person's last name</desc>
      </column>
      <column> <name>EMAIL</name>           <type>VARCHAR</type>   <param>60</param>
      <desc>Person's e-mail address</desc>
      </column>
    </columns>
    <primary-key>USER_NAME</primary-key>
  </table>

  <table>
    <name>UP_PERMISSION</name>
    <desc>Permissions table for adding publishing activity to owner chan_id=10</desc>
    <columns>
      <column> <name>OWNER</name>           <type>VARCHAR</type>   <param>255</param>
      </column>
      <column><name>PRINCIPAL</name>        <type>VARCHAR</type>   <param>255</param>
      </column>
      <column><name>ACTIVITY</name>         <type>VARCHAR</type>   <param>255</param>
      </column>
      <column><name>TARGET</name>           <type>VARCHAR</type>   <param>255</param>
      </column>
      <column><name>PERMISSION_TYPE</name>  <type>VARCHAR</type>   <param>255</param>
      </column>
      <column><name>EFFECTIVE</name>        <type>TIMESTAMP</type>
      </column>
      <column><name>EXPIRES</name>          <type>TIMESTAMP</type>
      </column>
    </columns>
  </table>

  <table>
    <name>UP_USER_LAYOUT</name>
    <desc>For a given user, a layout is created giving it an id and title, basing it on an initial structure id - for example a tab column versus a nested structure</desc>
    <columns>
      <column> <name>LAYOUT_ID</name>      <type>INTEGER</type>
      <desc>Layout ID is not unique to the portal but unique for a given user. It links to up_layout_struct</desc>
      <key>CK</key>
      </column>
      <column> <name>USER_ID</name>        <type>INTEGER</type>
      <desc>Foreign key user_id of table up_user</desc>
      <key>CK</key>
      </column>
      <column> <name>LAYOUT_TITLE</name>   <type>VARCHAR</type> <param>15</param>
      <desc>Layout title - the name of the layout in text</desc>
      </column>
      <column> <name>INIT_STRUCT_ID</name> <type>INTEGER</type>
      <desc>Initial structure ID - Points to the first channel/folder in the users layout and sets the start of the document tree</desc>
      <key>FK</key>
      </column>
    </columns>
    <primary-key>LAYOUT_ID</primary-key>
    <primary-key>USER_ID</primary-key>
  </table>

  <table>
    <name>UP_LAYOUT_STRUCT</name>
    <desc>Holds the order of a user's layout structure -  the order in the user layout of channels subscribed to, the order of layout components (columns for example)</desc>
    <columns>
      <column> <name>USER_ID</name>        <type>INTEGER</type>
      <desc>Foreign key user_id of table up_user</desc>
      <key>CK</key>
      </column>
      <column> <name>LAYOUT_ID</name>      <type>INTEGER</type>
      <desc>Foreign key layout_id of table up_user_layout and compound key</desc>
      <key>CK</key>
      </column>
      <column> <name>STRUCT_ID</name>      <type>INTEGER</type>
      <desc>Struct ID is a unique number for a given user and is used by the portal for a given component (channel, column, etc) - primary key  Given by next_struct_id in table up_user</desc>
      <key>CK</key>
      </column>
      <column> <name>NEXT_STRUCT_ID</name> <type>INTEGER</type>
      <desc>Struct ID that follows this ID in a list</desc>
      </column>
      <column> <name>CHLD_STRUCT_ID</name> <type>INTEGER</type>
      <desc>Struct ID that is a child to this ID</desc>
      </column>
      <column> <name>EXTERNAL_ID</name>    <type>INTEGER</type>
      <desc>External ID that is ****</desc>
      </column>
      <column> <name>CHAN_ID</name>        <type>INTEGER</type>
      <desc>Channel ID if the current Struct_ID entry is a channel, then this is set to the channel id subscribed to and located at this position in the layout</desc>
      </column>
      <column> <name>NAME</name>           <type>VARCHAR</type> <param>35</param>
      <desc>Name of this struct entry, name of tab, column, header or footer, etc</desc>
      </column>
      <column> <name>TYPE</name>           <type>VARCHAR</type> <param>35</param>
      <desc>Used by portal to render framework channels - distinguishes structure components like tab and columns from footers, headers and channels</desc>
      </column>
      <column> <name>HIDDEN</name>         <type>VARCHAR</type> <param>1</param>
      <desc>Set to Y if channel is hidden</desc>
      </column>
      <column> <name>IMMUTABLE</name>      <type>VARCHAR</type> <param>1</param>
      <desc>Set to Y if channel cannot be moved in layout</desc>
      </column>
      <column> <name>UNREMOVABLE</name>      <type>VARCHAR</type> <param>1</param>
      <desc>Set to Y if channel cannot be unsubscribed to or removed by user</desc>
      </column>
    </columns>
    <primary-key>LAYOUT_ID</primary-key>
    <primary-key>USER_ID</primary-key>
    <primary-key>STRUCT_ID</primary-key>
  </table>

  <table>
    <name>UP_LAYOUT_PARAM</name>
    <desc>Parameters set by the user at publish time based upon the Channel Publishing Document of a channel class, see UP_CHAN_TYPE table.  Optionally set at subscription time according to the values stored in table up_channel_param</desc>
    <columns>
      <column> <name>USER_ID</name>         <type>INTEGER</type>
      <desc>Foreign key user_id of table up_user</desc>
      <key>CK</key>
      </column>
      <column> <name>LAYOUT_ID</name>       <type>INTEGER</type>
      <desc>Foreign key layout_id of table up_user_layout and compound key</desc>
      <key>CK</key>
      </column>
      <column> <name>STRUCT_ID</name>       <type>INTEGER</type>
      <desc>Foreign key of table UP_LAYOUT_STRUCT and compound key</desc>
      </column>
      <key>CK</key>
      <column> <name>STRUCT_PARM_NM</name>  <type>VARCHAR</type> <param>35</param>
      <desc>Struct parameter name - holds the parameter name as given in the CPD - foreign key of table UP_CHANNEL_PARAM</desc>
      <key>FK</key>
      </column>
      <column> <name>STRUCT_PARM_VAL</name> <type>LONGVARCHAR</type>
      <desc>Struct parameter value - holds the parameter value as entered by the user</desc>
      </column>
    </columns>
    <not-null>LAYOUT_ID</not-null>
    <not-null>USER_ID</not-null>
    <not-null>STRUCT_ID</not-null>
    <not-null>STRUCT_PARM_NM</not-null>
  </table>

  <table>
    <name>UP_CHANNEL</name>
    <desc>Channels - this table holds the major elements of a channel used as a default for all users</desc>
    <columns>
      <column> <name>CHAN_ID</name>          <type>INTEGER</type>
      <desc>Channel ID is a unique sequence number generated by the portal - primary key</desc>
      <key>PK</key>
      </column>
      <column> <name>CHAN_TITLE</name>       <type>VARCHAR</type>   <param>35</param>
      <desc>Channel title - it appears at the top title bar of the channel</desc>
      </column>
      <column> <name>CHAN_NAME</name>        <type>VARCHAR</type>   <param>35</param>
      <desc>Channel name - used for display name of channel for subscribe, usually the same as title</desc>
      </column>
      <column> <name>CHAN_DESC</name>        <type>VARCHAR</type>   <param>255</param>
      <desc>Channel description - provides additional information to the user about the channel to help him or her select a channel to subscribe to</desc>
      </column>
      <column> <name>CHAN_CLASS</name>       <type>VARCHAR</type>   <param>100</param>
      <desc>Channel class - the java class used to render this type of channel - foreign key to type in table up_chan_types</desc>
      <key>FK</key>
      </column>
      <column> <name>CHAN_TYPE_ID</name>     <type>INTEGER</type>
      <desc>Channel type id - the id of the java class used to render this type of channel - foreign key to type_id (primary key) of table up_chan_types</desc>
      <key>FK</key>
      </column>
      <column> <name>CHAN_PUBL_ID</name>     <type>INTEGER</type>
      <desc>Channel publisher id - user_id of channel publisher - foreign key user_id of up_user</desc>
      <key>FK</key>
      </column>
      <column> <name>CHAN_PUBL_DT</name>     <type>TIMESTAMP</type>
      <desc>Date channel published</desc>
      </column>
      <column> <name>CHAN_APVL_ID</name>     <type>INTEGER</type>
      <desc>Channel approver id - foreign key user_id of up_user</desc>
      <key>FK</key>
      </column>
      <column> <name>CHAN_APVL_DT</name>     <type>TIMESTAMP</type>
      <desc>Date channel approved for use</desc>
      </column>
      <column> <name>CHAN_TIMEOUT</name>     <type>INTEGER</type>
      <desc>Channel timeout (msec) - the amount of time for an individual channel thread to render prior to being aborted, that is not cached and rendered with an error message</desc>
      </column>
      <column> <name>CHAN_MINIMIZABLE</name> <type>VARCHAR</type>   <param>1</param>
      <desc>Can the channel be minimized, that is content scrolled up into title bar</desc>
      </column>
      <column> <name>CHAN_EDITABLE</name>    <type>VARCHAR</type>   <param>1</param>
      <desc>Is the channel editable, that is can channel parameters be changed by a user ****</desc>
      </column>
      <column> <name>CHAN_HAS_HELP</name>    <type>VARCHAR</type>   <param>1</param>
      <desc>Does the channel have on-line help</desc>
      </column>
      <column> <name>CHAN_HAS_ABOUT</name>   <type>VARCHAR</type>   <param>1</param>
      <desc>Does the channel have on-line about information - example information about the developers</desc>
      </column>
      <column> <name>CHAN_UNREMOVABLE</name> <type>VARCHAR</type>   <param>1</param>
      <desc>Can the channel be removed from his or her layout, once subscribed to</desc>
      </column>
      <column> <name>CHAN_DETACHABLE</name>  <type>VARCHAR</type>   <param>1</param>
      <desc>Can the channel appear in a separate window, above the portal, to give the user more space</desc>
      </column>
      <column> <name>CHAN_FNAME</name>       <type>VARCHAR</type>   <param>255</param>
      <desc>Channel functional name.  It is used to find a channel in a user's layout via JNDI.  It is an optional
channel attribute.</desc>
      </column>
    </columns>
    <primary-key>CHAN_ID</primary-key>
  </table>

  <table>
    <name>UP_CHANNEL_PARAM</name>
    <desc>Channel parameters - holds channel parameters shared for all users who subscribe to this channel</desc>
    <columns>
      <column> <name>CHAN_ID</name>        <type>INTEGER</type>
      <desc>Foreign key from up_channel</desc>
      <key>FK</key>
      </column>
      <column> <name>CHAN_PARM_NM</name>   <type>VARCHAR</type> <param>35</param>
      <desc>Channel parameter name - a short name for a particular channel ID</desc>
      </column>
      <column> <name>CHAN_PARM_DESC</name> <type>VARCHAR</type> <param>255</param>
      <desc>Channel parameter description - text string that describes parameter</desc>
      </column>
      <column> <name>CHAN_PARM_VAL</name>  <type>VARCHAR</type> <param>255</param>
      <desc>Channel parameter value - contains a parameter's value</desc>
      </column>
      <column> <name>CHAN_PARM_OVRD</name> <type>VARCHAR</type> <param>1</param>
      <desc>Channel parameter override - Either "Y" or "N". "Y" or yes allows a user to override default channel parameters with his/her own</desc>
      </column>
    </columns>
    <not-null>CHAN_ID</not-null>
    <not-null>CHAN_PARM_NM</not-null>
  </table>

  <table>
    <name>UP_CATEGORY</name>
    <desc>Channel categories - allowed to be nested</desc>
    <columns>
      <column> <name>CAT_ID</name>          <type>INTEGER</type>
      <desc>Category ID is a unique sequence number generated by the portal - primary key</desc>
      <key>PK</key>
      </column>
      <column> <name>CAT_TITLE</name>       <type>VARCHAR</type>   <param>35</param>
      <desc>Category title or name displayed to the user</desc>
      </column>
      <column> <name>CAT_DESC</name>        <type>VARCHAR</type>   <param>255</param>
      <desc>Category description - detail describing category</desc>
      </column>
      <column> <name>PARENT_CAT_ID</name>   <type>INTEGER</type>
      <desc>The parent category id (CAT_ID) to this CAT_ID entry</desc>
      </column>
      <column> <name>NEXT_CAT_ID</name>     <type>INTEGER</type>
      <desc>The category id (CAT_ID) that follows this CAT_ID entry in a list</desc>
      </column>
      <column> <name>PRIOR_CAT_ID</name>    <type>INTEGER</type>
      <desc>The category id (CAT_ID) that preceeds this CAT_ID entry in a list</desc>
      </column>
      <column> <name>FST_CHLD_CAT_ID</name> <type>INTEGER</type>
      <desc>The first category id (CAT_ID) that is a child to this CAT_ID - it's the first element of a drill down from this category</desc>
      </column>
    </columns>
    <primary-key>CAT_ID</primary-key>
  </table>

  <table>
    <name>UP_CAT_CHAN</name>
    <desc>Many to many map of channels and categories so channels may be found under categories during subscribe</desc>
    <columns>
      <column> <name>CHAN_ID</name> <type>INTEGER</type>
      <desc>Foreign key chan_id of table up_channel and compound key</desc>
      <key>CK</key>
      </column>
      <column> <name>CAT_ID</name>  <type>INTEGER</type>
      <desc>Foreign key cat_id of table up_category and compound key</desc>
      <key>CK</key>
      </column>
    </columns>
    <primary-key>CAT_ID</primary-key>
    <primary-key>CHAN_ID</primary-key>
  </table>

  <table>
    <name>UP_ROLE</name>
    <desc>Roles - a user may belong to many roles (see UP_USER_ROLE) and channels may be approved using a role (see UP_ROLE_CHAN)</desc>
    <columns>
      <column> <name>ROLE_ID</name>          <type>INTEGER</type>
      <desc>Role ID is a unique sequence number generated by the portal - primary key</desc>
      <key>PK</key>
      </column>
      <column> <name>ROLE_TITLE</name>       <type>VARCHAR</type>   <param>35</param>
      <desc>Role title is a short, one word description of a role</desc>
      </column>
      <column> <name>ROLE_DESC</name>        <type>VARCHAR</type>   <param>255</param>
      <desc>Role title is a long, textual description of a role to be displayed to the user</desc>
      </column>
      <column> <name>ROLE_DFLT_USR_ID</name> <type>INTEGER</type>
      <desc>The user id this role is based upon and used for default</desc>
      </column>
      <column> <name>ROLE_DFLT_LAY_ID</name> <type>INTEGER</type>
      <desc>The layout id this role is based upon and used for default</desc>
      </column>
      <column> <name>ROLE_OWNER_ID</name>    <type>INTEGER</type>
      <desc>This role is owned by this user</desc>
      </column>
      <column> <name>ROLE_CREATE_ID</name>   <type>TIMESTAMP</type>
      <desc>This role was created by this user</desc>
      </column>
    </columns>
    <primary-key>ROLE_ID</primary-key>
  </table>

  <table>
    <name>UP_USER_ROLE</name>
    <desc>Maps users to many roles (see UP_ROLE)</desc>
    <columns>
      <column> <name>USER_ID</name>       <type>INTEGER</type>
      <desc>Foreign key user_id of table up_user</desc>
      <key>CK</key>
      </column>
      <column> <name>ROLE_ID</name>       <type>INTEGER</type>
      <desc>Foreign key of table UP_ROLE and compound key</desc>
      <key>CK</key>
      </column>
      <column> <name>PRIM_ROLE_IND</name> <type>VARCHAR</type> <param>1</param>
      <desc>Primary role indication - Y for yes, N for no</desc>
      </column>
    </columns>
    <not-null>USER_ID</not-null>
    <not-null>ROLE_ID</not-null>
  </table>

  <table>
    <name>UP_ROLE_CHAN</name>
    <desc>channels may be approved using a role (see UP_ROLE)</desc>
    <columns>
      <column> <name>ROLE_ID</name>      <type>INTEGER</type>
      <desc>Foreign key of table UP_ROLE and compound key</desc>
      <key>CK</key>
      </column>
      <column> <name>CHAN_ID</name>      <type>INTEGER</type>
      <desc>Foreign key of table UP_CHANNEL and compound key</desc>
      <key>CK</key>
      </column>
      <column> <name>RELEASE_DT</name>   <type>TIMESTAMP</type>
      <desc>Channel release date - corresponding to date of approval flag set to Y</desc>
      </column>
      <column> <name>APPROVAL_FLG</name> <type>VARCHAR</type>   <param>1</param>
      <desc>Channel approved - Y for yes, N for no</desc>
      </column>
    </columns>
    <not-null>ROLE_ID</not-null>
    <not-null>CHAN_ID</not-null>
  </table>

  <table>
    <name>UP_KEYWORD</name>
    <desc>Not used</desc>
    <columns>
      <column> <name>CHAN_ID</name> <type>INTEGER</type>
      <desc>Foreign key of table UP_CHANNEL and compound key</desc>
      <key>CK</key>
      </column>
      <column> <name>ROLE_ID</name> <type>INTEGER</type>
      <desc>Foreign key of table UP_ROLE and compound key</desc>
      <key>CK</key>
      </column>
      <column> <name>USER_ID</name> <type>INTEGER</type>
      <desc>Foreign key user_id of table up_user</desc>
      <key>CK</key>
      </column>
      <column> <name>KEYWORD</name> <type>LONGVARCHAR</type>
      <desc>Keywords separated by commas used to search for a channel</desc>
      </column>
    </columns>
    <primary-key>CHAN_ID</primary-key>
    <primary-key>ROLE_ID</primary-key>
    <primary-key>USER_ID</primary-key>
  </table>

  <table>
    <name>UP_CHAN_TYPE</name>
    <desc>Information about a java channel class, including the class to execute and it's Channel Publishing Document, used at publish</desc>
    <columns>
      <column> <name>TYPE_ID</name>      <type>INTEGER</type>
      <desc>Type ID is a unique sequence number generated by the portal - primary key</desc>
      <key>PK</key>
      </column>
      <column> <name>TYPE</name>         <type>VARCHAR</type>     <param>50</param>
      <desc>Type holds the name of the java class - eg, org.jasig.portal.channels.CImage</desc>
      </column>
      <column> <name>TYPE_NAME</name>    <type>VARCHAR</type>     <param>70</param>
      <desc>Type name is a short description of the java class displayed during publish</desc>
      </column>
      <column> <name>TYPE_DESCR</name>   <type>LONGVARCHAR</type>
      <desc>Type description of the java class</desc>
      </column>
      <column> <name>TYPE_DEF_URI</name> <type>VARCHAR</type>     <param>255</param>
      <desc>URI or location of the Channel Publishing Document - CPD</desc>
      </column>
    </columns>
    <primary-key>TYPE_ID</primary-key>
  </table>

  <table>
    <name>UPC_BOOKMARKS</name>
    <desc>Used by the bookmark channel to store a user's bookmark data in XML format</desc>
    <columns>
      <column> <name>PORTAL_USER_ID</name> <type>INTEGER</type>
      <desc>Foreign key user_id of table up_user</desc>
      <key>FK</key>
      </column>
      <column> <name>BOOKMARK_XML</name>   <type>LONGVARCHAR</type>
      <desc>User's bookmarks stored in XML</desc>
      </column>
    </columns>
    <primary-key>PORTAL_USER_ID</primary-key>
  </table>

  <table>
    <name>UP_SEQUENCE</name>
    <desc>Emulates auto-increment/sequence values for the the various uPortal tables primary keys. Not used by DBLoader.</desc>
    <columns>
      <column> <name>SEQUENCE_NAME</name>  <type>VARCHAR</type> <param>35</param>
      <key>PK</key>
      <desc>Name of sequence, corresponds to table name</desc>
      </column>
      <column> <name>SEQUENCE_VALUE</name> <type>INTEGER</type>
      <desc>Next available number</desc>
      </column>
    </columns>
    <primary-key>SEQUENCE_NAME</primary-key>
  </table>

  <table>
    <name>UP_USER_UA_MAP</name>
    <desc>For a given user and layout combination, a list of reasonable browsers stored in user_agent</desc>
    <columns>
      <column> <name>USER_ID</name>    <type>INTEGER</type>
      <desc>Foreign key user_id of table up_user</desc>
      <key>CK</key>
      </column>
      <column> <name>USER_AGENT</name> <type>VARCHAR</type> <param>100</param>
      <desc>User agent string identifying a particular browser and version</desc>
      </column>
      <column> <name>PROFILE_ID</name> <type>INTEGER</type>
      <desc>Foreign key of table up_user_profiles and compound key</desc>
      <key>CK</key>
      </column>
    </columns>
  </table>

  <table>
    <name>UP_USER_PROFILE</name>
    <columns>
      <column> <name>USER_ID</name>           <type>INTEGER</type>
      <desc>Foreign key user_id of table up_user</desc>
      <key>CK</key>
      </column>
      <column> <name>PROFILE_ID</name>        <type>INTEGER</type>
      <desc>Internal sequence id of a profile id - primary key</desc>
      <key>PK</key>
      </column>
      <column> <name>PROFILE_NAME</name>      <type>VARCHAR</type> <param>50</param>
      <desc>Short name of profile</desc>
      </column>
      <column> <name>DESCRIPTION</name>       <type>VARCHAR</type> <param>100</param>
      <desc>Long description of profile</desc>
      </column>
      <column> <name>LAYOUT_ID</name>         <type>INTEGER</type>
      </column>
      <column> <name>STRUCTURE_SS_ID</name> <type>INTEGER</type>
      </column>
      <column> <name>THEME_SS_ID</name>     <type>INTEGER</type>
      </column>
    </columns>
    <primary-key>USER_ID</primary-key>
    <primary-key>PROFILE_ID</primary-key>
  </table>

  <table>
    <name>UP_SS_USER_PARM</name>
    <desc>Holds a user's parameters according to user's structure style sheet - stored in a given user profile (ex. active tab and skin selection) (see up_ss_struct and up_ss_struct_par) based on ss_id</desc>
    <columns>
      <column> <name>USER_ID</name>              <type>INTEGER</type>
      <desc>Foreign key user_id of table up_user</desc>
      <key>CK</key>
      </column>
      <column> <name>PROFILE_ID</name>           <type>INTEGER</type>
      <desc>Foreign key of table up_user_profile and compound key</desc>
      <key>CK</key>
      </column>
      <column> <name>SS_ID</name>      <type>INTEGER</type>
      <desc>Foreign key of table up_ss_struct_par and compound key</desc>
      <key>CK</key>
      </column>
      <column> <name>SS_TYPE</name> <type>INTEGER</type>
      <desc>Foreign key TYPE of table up_ss_struct_par</desc>
      </column>
      <column> <name>PARAM_NAME</name>             <type>VARCHAR</type>     <param>100</param>
      <desc>Short description of parameter foreign key param_name of table up_ss_struct_par</desc>
      </column>
      <column> <name>PARAM_VAL</name>              <type>VARCHAR</type>     <param>255</param>
      <desc>Parameter value (ex. 1 for active tab)</desc>
      </column>
    </columns>
  </table>

  <table>
    <name>UP_SS_USER_ATTS</name>
    <desc>Holds a user's parameters according to user's theme style sheet - stored in a given user profile (ex. column width) (see up_ss_struct and up_ss_struct_par) based on ss_id</desc>
    <columns>
      <column> <name>USER_ID</name>              <type>INTEGER</type>
      <desc>Foreign key user_id of table up_user</desc>
      </column>
      <column> <name>PROFILE_ID</name>           <type>INTEGER</type>
      <desc>Foreign key of table up_user_profile and compound key</desc>
      <key>CK</key>
      </column>
      <column> <name>SS_ID</name>      <type>INTEGER</type>
      <desc>Foreign key of table up_ss_struct_par and compound key</desc>
      <key>CK</key>
      </column>
      <column> <name>SS_TYPE</name> <type>INTEGER</type>
      <desc>Foreign key TYPE of table up_ss_struct_par</desc>
      </column>
      <column> <name>STRUCT_ID</name>      <type>INTEGER</type>
      <desc>Foreign key ss_id of table up_ss_struct</desc>
      </column>
      <column> <name>PARAM_NAME</name>             <type>VARCHAR</type>     <param>100</param>
      <desc>Short description of parameter foreign key param_name of table up_ss_struct_par</desc>
      </column>
      <column> <name>PARAM_TYPE</name>             <type>INTEGER</type>
      <desc>Foreign key TYPE of table up_ss_struct_par</desc>
      </column>
      <column> <name>PARAM_VAL</name>              <type>VARCHAR</type>     <param>255</param>
      <desc>Parameter value (ex. 100% for column width)</desc>
      </column>
    </columns>
  </table>


  <table>
    <name>UP_SS_THEME</name>
    <desc>Theme style sheet information - holds device, mime, serializer and class module information to render a given structured style sheet (see up_ss_struct) (ex. Nested tables or Deck of cards) parameters held in up_ss_theme_parm</desc>
    <columns>
      <column> <name>SS_ID</name> <type>INTEGER</type>
      <desc>Style sheet ID is a unique sequence number used by the portal - primary key</desc>
      <key>PK</key>
      </column>
      <column> <name>SS_NAME</name>             <type>VARCHAR</type>     <param>30</param>
      <desc>Theme style sheet name, displayed to the user - (ex. Nested tables or Deck of cards)</desc>
      </column>
      <column> <name>SS_URI</name>              <type>VARCHAR</type>     <param>255</param>
      <desc>URI to locate style sheet used for this transformation</desc>
      </column>
      <column> <name>SS_DESCRIPTION_URI</name>  <type>VARCHAR</type>     <param>255</param>
      <desc>URI to locate style sheet description file</desc>
      </column>
      <column> <name>SS_DESCRIPTION_TEXT</name> <type>LONGVARCHAR</type>
      <desc>Long description of the results of this rendering for a device</desc>
      </column>
      <column> <name>STRUCT_SS_ID</name>		<type>INTEGER</type>
      <desc>Foreign key ss_id of up_ss_struct - indicates a corresponding structure style sheet for this device</desc>
      <key>FK</key>
      </column>
      <column> <name>SAMPLE_ICON_URI</name>      <type>VARCHAR</type> <param>255</param>
      <desc>URI locating the graphic for a sample icon representation of this theme</desc>
      </column>
      <column> <name>SAMPLE_URI</name>      <type>VARCHAR</type> <param>255</param>
      <desc>URI locating the full size graphic for a sample representation of this theme (ex. cellphone or workstation)</desc>
      </column>
      <column> <name>MIME_TYPE</name>      <type>VARCHAR</type> <param>30</param>
      <desc>Foreign key MIME_TYPE of table up_mime_type - copied from mime_type of up_mime_type</desc>
      </column>
      <column> <name>DEVICE_TYPE</name>      <type>VARCHAR</type> <param>30</param>
      <desc>Description of device (ex. cellphone)</desc>
      </column>
      <column> <name>SERIALIZER_NAME</name>      <type>VARCHAR</type> <param>255</param>
      <desc>Type of serializer to use for this device</desc>
      </column>
      <column> <name>UP_MODULE_CLASS</name>      <type>VARCHAR</type> <param>255</param>
      <desc>Module used to set preferences (see up_ss_theme_parm)</desc>
      </column>
    </columns>
    <primary-key>SS_ID</primary-key>
  </table>

  <table>
    <name>UP_SS_THEME_PARM</name>
    <columns>
      <column> <name>SS_ID</name> <type>INTEGER</type>
      <desc>Foreign key SS_ID of UP_SS_THEME</desc>
      <key>FK</key>
      </column>
      <column> <name>PARAM_NAME</name>             <type>VARCHAR</type>     <param>100</param>
      <desc>Short description of parameter</desc>
      <key>CK</key>
      </column>
      <column> <name>PARAM_DEFAULT_VAL</name>              <type>VARCHAR</type>     <param>255</param>
      <desc>When first assigning this theme style sheet, parameter is set to this default value</desc>
      </column>
      <column> <name>PARAM_DESCRIPT</name>              <type>VARCHAR</type>     <param>255</param>
      <desc>Long description of the parameter - used for internal documentation ****</desc>
      </column>
      <column> <name>TYPE</name> <type>INTEGER</type>
      <desc>****</desc>
      </column>
    </columns>
    <primary-key>SS_ID</primary-key>
    <primary-key>PARAM_NAME</primary-key>
    <primary-key>TYPE</primary-key>
  </table>

  <table>
    <name>UP_SS_STRUCT</name>
    <desc>Structure style sheet information - holds information to change the layout components for a user (ex. tabs and columns or nested categories) parameters held in up_ss_struct_par</desc>
    <columns>
      <column> <name>SS_ID</name> <type>INTEGER</type>
      <desc>Style sheet ID is a unique sequence number used by the portal - primary key</desc>
      <key>PK</key>
      </column>
      <column> <name>SS_NAME</name>             <type>VARCHAR</type>     <param>30</param>
      <desc>Structured style sheet name, displayed to the user - (ex. Tabs and columns, Nested categories)</desc>
      </column>
      <column> <name>SS_URI</name>              <type>VARCHAR</type>     <param>255</param>
      <desc>URI to locate style sheet used for this transformation</desc>
      </column>
      <column> <name>SS_DESCRIPTION_URI</name>  <type>VARCHAR</type>     <param>255</param>
      <desc>URI to locate style sheet description file</desc>
      </column>
      <column> <name>SS_DESCRIPTION_TEXT</name> <type>LONGVARCHAR</type>
      <desc>Long description of the results of this transformation</desc>
      </column>
    </columns>
    <primary-key>SS_ID</primary-key>
  </table>

  <table>
    <name>UP_SS_STRUCT_PAR</name>
    <columns>
      <column> <name>SS_ID</name> <type>INTEGER</type>
      <desc>Foreign key SS_ID of table up_ss_struct</desc>
      <key>CK</key>
      </column>
      <column> <name>PARAM_NAME</name>             <type>VARCHAR</type>     <param>100</param>
      <desc>Short description of parameter</desc>
      <key>CK</key>
      </column>
      <column> <name>PARAM_DEFAULT_VAL</name>              <type>VARCHAR</type>     <param>255</param>             <desc>When first assigning this style sheet parameter is set to this default value</desc>
      </column>
      <column> <name>PARAM_DESCRIPT</name>              <type>VARCHAR</type>     <param>255</param>             <desc>Long description of the parameter - used to display to user (ex. Width of the column)</desc>
      </column>
      <column> <name>TYPE</name> <type>INTEGER</type>
      <desc>Used by portal to distinguishes between structure components like width and active tab</desc>
      <key>CK</key>
      </column>
    </columns>
    <primary-key>SS_ID</primary-key>
    <primary-key>PARAM_NAME</primary-key>
    <primary-key>TYPE</primary-key>
  </table>

  <table>
    <name>UP_SS_MAP</name>
    <desc>Reasonable combinations of themes and structures for a given mime type</desc>
    <columns>
      <column> <name>THEME_SS_ID</name>    <type>INTEGER</type>
      <desc>Foreign key SS_ID of table up_ss_theme</desc>
      <key>FK</key>
      </column>
      <column> <name>STRUCT_SS_ID</name>   <type>INTEGER</type>
      <desc>Foreign key SS_ID of table up_ss_struct</desc>
      <key>FK</key>
      </column>
      <column> <name>MIME_TYPE</name>      <type>VARCHAR</type> <param>30</param>
      <desc>Foreign key MIME_TYPE of table up_mime_type - copied from mime_type of up_mime_type</desc>
      </column>
    </columns>
  </table>

  <table>
    <name>UP_MIME_TYPE</name>
    <desc>Mime types known by the portal</desc>
    <columns>
      <column> <name>MIME_TYPE</name>             <type>VARCHAR</type>     <param>30</param>
      <desc>A known mime type (ex. text/html)</desc>
      <key>PK</key>
      </column>
      <column> <name>MIME_TYPE_DESCRIPTION</name> <type>LONGVARCHAR</type>
      <desc>Mime type description (ex. HTML mime type is the one that most desktop browsers use for text)</desc>
      </column>
    </columns>
    <primary-key>MIME_TYPE</primary-key>
  </table>

</tables>


